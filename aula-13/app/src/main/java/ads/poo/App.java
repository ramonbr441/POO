/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ads.poo;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class App {


    private ArrayList<Aluno> alunos;
    private HashMap<String, Aluno> bancoDeDados;
    public App() {
        this.alunos = new ArrayList<>();
        this.bancoDeDados = new HashMap<>();
    }

    private int menu() {
        int opcao = 0;
        System.out.println("..:: SIGAA 2::..");
        System.out.println("1 - Cadastrar");
        System.out.println("2 - Editar ");
        System.out.println("3 - Excluir");
        System.out.println("4 - Listar dados de um aluno");
        System.out.println("5 - Listar todos os alunos");
        System.out.println("6 - sair");

        Scanner teclado = new Scanner(System.in);
        opcao = teclado.nextInt();
        teclado.nextLine();
        return opcao;
    }

    private boolean cadastrar() {
        Scanner teclado = new Scanner(System.in);
        System.out.println("digite o nome do aluno:");
        String nome = teclado.nextLine();
        System.out.println("digite a matricula do aluno:");
        String matricula = teclado.nextLine();
        System.out.println("informe o curso");
        String curso = teclado.nextLine();
        System.out.println("informe o telefone do aluno");
        String telefone = teclado.nextLine();
        System.out.println("informe o email do aluno");
        String email = teclado.nextLine();
        System.out.println("informe a data de nascimento");
        String datastr = teclado.nextLine();
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate data = LocalDate.parse(datastr, formato);


        Aluno a = new Aluno (nome,matricula,curso,telefone,email,data);
        if(!this.bancoDeDados.containsKey(matricula)) {
            this.bancoDeDados.put(matricula, a);
            return true;
        }
        return false;


    }

    private boolean editar() {
        Scanner teclado = new Scanner(System.in);
        System.out.println("digite a matricula do aluno o qual deseja mudar as informações: ");
        String e = teclado.nextLine();
        if(this.bancoDeDados.containsKey(e)){
            Aluno alunoASerEditado = bancoDeDados.get(e);
            System.out.println("digite o novo nome do aluno ou pressione enter para manter");
            String nome = teclado.nextLine();
            if (nome.length() > 0){
                alunoASerEditado.setNome(nome);
            }
            System.out.println("digite o novo curso do aluno ou pressione enter para manter");
            String curso = teclado.nextLine();
            if (curso.length() > 0){
                alunoASerEditado.setCurso(curso);
            }
            System.out.println("digite o novo contato do aluno ou pressione enter para manter");
            String telefone = teclado.nextLine();
            if (telefone.length() > 0){
                alunoASerEditado.setTelefone(telefone);
            }
            System.out.println("digite o novo email do aluno ou pressione enter para manter");
            String email = teclado.nextLine();
            if (email.length() > 0){
                alunoASerEditado.setEmail(email);
            }
            System.out.println("digite a nova data de nascimento ou pressione enter para manter");
            String DataNascimento = teclado.nextLine();
            if(DataNascimento.length() > 0 ){

                DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                LocalDate data = LocalDate.parse(DataNascimento, formato);
                alunoASerEditado.setDataNascimento(LocalDate.parse(DataNascimento,formato));
            }

        }else{
            System.out.println("aluno não encontrado");
        }
        return false;

    }

    private boolean excluir() {
        Scanner teclado = new Scanner(System.in);
        System.out.println("entre com a matricula do aluno que deseja excluir");
        String r = teclado.nextLine();
        if( this.bancoDeDados.remove(r) == null){
            System.out.println("não encontrada");
        }else{
            System.out.println("removida com sucesso");
        }

        return false;

    }

    private boolean listarDadosAlunos() {
        Scanner teclado = new Scanner(System.in);
        System.out.println("entre com o numero de matricula do aluno:");
        String m = teclado.nextLine();
        if(bancoDeDados.containsKey(m)){
            System.out.println(this.bancoDeDados.get(m));
        }else{
            System.out.println("matricula não encontrada");
        }

        return true;
    }

    private boolean listarAlunos() {
        System.out.println(this.bancoDeDados);
        return true;
    }


    public static void main(String[] args) {

     App app = new App();
     int opcao = 0;
     do{
         opcao = app.menu();

         switch (opcao){
             case 1-> app.cadastrar();
             case 2 -> app.editar();
             case 3 -> app.excluir();
             case 4 -> app.listarDadosAlunos();
             case 5 -> app.listarAlunos();
             case 6 -> System.out.println("saindo");
             default -> System.out.println("opção invalida");
         }
     }while (opcao !=6);


    }


}

