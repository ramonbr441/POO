/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ads.poo;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.Scanner;
import java.util.Stack;

public class App {
    public static void main(String[] args) {

//        ArrayList<String> nomes = new ArrayList<>();
//
//        String s = "juca";
//
//        nomes.add(s);
//        nomes.add("Ramon");
//        nomes.add("ana");

//        System.out.println(nomes);
//
//        if (!nomes.isEmpty()){
//            nomes.clear();
//
//        }
//        System.out.println(nomes);
//    }

//        nomes.remove(s);
//
//        String [] v =(String[]) nomes.toArray();
//

//
//        //correçao de tipos ou typecasting
//
//        double d = 2.3;
//        int i = (int) d;
//
//
        //for i

//        for(int i = 0; i < nomes.size(); i++){
//            System.out.println("nome: " + nomes.get(i));
//        }

        //for each
//        for(String elemento :nomes){
//            System.out.println("nome: "+ elemento);
//        }

        // usando lambda
//        nomes.forEach(elemento-> System.out.println("nome: " + elemento));


        // metedo reference
//

        // pedir pro usuario fornecer numeros interos e guardar na coleção até chegar no 99, não guarda o 99, e imprime a coleção ordenadamente

        ArrayList<Integer> numbers = new ArrayList<>();


        Scanner teclado = new Scanner(System.in);

        int n = 0;
        while (n != 999) {
            System.out.print("entre com o numero inteiro: ");
            n = teclado.nextInt();

            if (n != 999) {
                numbers.add(n);
            }

        }

        numbers.sort(Comparator.naturalOrder());

        for (Integer elementos : numbers) {
            System.out.println(elementos);
        }

        Stack<Integer>  numeros = new Stack<>();

        int num = teclado.nextInt();
    }
}
